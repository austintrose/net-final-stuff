import os
import datetime
import re

from django.core.management.base import BaseCommand, CommandError
from domains.models import (AddedZoneDomain, RemovedZoneDomain, 
                            Nameserver, AddedMalwareDomain, RemovedMalwareDomain)

added_mw_domains_dir = '/home/atrose/domains-parsing/added-domains/'
removed_mw_domains_dir = '/home/atrose/domains-parsing/removed-domains/'

added_filenames = os.listdir(added_mw_domains_dir)
removed_filenames = os.listdir(removed_mw_domains_dir)

class Command(BaseCommand):
    def handle(self, *args, **options):
	#for a in added_filenames:
            #self.handle_added_domains_file(a)
        for r in removed_filenames:
            self.handle_removed_domains_file(r)

    def handle_added_domains_file(self, filename):
        print "HANDLE", filename
        date_str = filename[:filename.find('.')]	
        date_inst = datetime.datetime.strptime(date_str, "%Y%m%d").date()
        filepath = added_mw_domains_dir + filename
        with open(filepath, 'r') as f:
            lines = f.readlines()

        com_lines = self.com_lines(lines)
        biz_lines = self.biz_lines(lines)

        for com_domain in com_lines:
            self.create_added_domain('COM', com_domain, date_inst)
            print '.',

        for biz_domain in biz_lines:
            self.create_added_domain('BIZ', biz_domain, date_inst)
            print '.',

        print

    def handle_removed_domains_file(self, filename):
        print "HANDLE", filename
        date_str = filename[:filename.find('.')]	
        date_str = date_str[date_str.rfind('-') + 1:]
        date_inst = datetime.datetime.strptime(date_str, "%Y%m%d").date()
        filepath = removed_mw_domains_dir + filename
        with open(filepath, 'r') as f:
            lines = f.readlines()

        com_lines = self.com_lines(lines)
        biz_lines = self.biz_lines(lines)

        for com_domain in com_lines:
            self.create_removed_domain('COM', com_domain, date_inst)
            print '.',

        for biz_domain in biz_lines:
            self.create_removed_domain('BIZ', biz_domain, date_inst)
            print '.',
    def com_lines(self, lines):
        return [l[:l.rfind('.')] for l in lines if l[l.rfind('.'):] == ".com\n"]

    def biz_lines(self, lines):
        return [l[:l.rfind('.')] for l in lines if l[l.rfind('.'):] == ".biz\n"]

    def create_added_domain(self, tld, name, date_added):
        domain_instance, _ = AddedMalwareDomain.objects.get_or_create(name=name.upper(), tld=tld, added=date_added)

    def create_removed_domain(self, tld, name, date_removed):
        domain_instance, _ = RemovedMalwareDomain.objects.get_or_create(name=name.upper(), tld=tld, removed=date_removed)
